import { PrismaClient } from "@prisma/client";
import { Role, Group } from "@prisma/client";

const prisma = new PrismaClient();

async function main() {
  // Create some users
  const user1 = await prisma.user.upsert({
    where: { email: "admin@example.com" },
    update: {},
    create: {
      email: "admin@example.com",
      name: "Admin User",
      role: Role.ADMIN,
      group: Group.DAY,
    },
  });

  const guests = [
    "Abby",
    "Abigail",
    "Abu",
    "Adelaide",
    "Adella",
    "Akela",
    "Aladdin",
    "Alcmene",
    "Alice",
    "Amelia",
    "Amos",
    "Anastasia",
    "Andrina",
    "Andy",
    "Anna",
    "Antonio",
    "Apollo",
    "Aquata",
    "Ariel",
    "Arthur",
    "Aurora",
    "Babette",
    "Bagheera",
    "Bailey",
    "Baloo",
    "Bambi",
    "Banzai",
    "Bashful",
    "Beast",
    "Beatrice",
    "Beaver",
    "Belle",
    "Ben",
    "Berlioz",
    "Bert",
    "Bolt",
    "Bruce",
    "Bruno",
    "Bullseye",
    "Bruni",
    "Buster",
    "Buzz Lightyear",
    "Camilo",
    "Candlewick",
    "Captain Hook",
    "Chad",
    "Charles",
    "Charlotte",
    "Chernabog",
    "Chief",
    "Chien-Po",
    "Chip",
    "Christopher Robin",
    "Chuck",
    "Cinderella",
    "Clayton",
    "Cleo",
    "Coco",
    "Cogsworth",
    "Colette",
    "Cookie",
    "Copper",
    "Count Frollo",
    "Cruella de Vil",
    "Daisy Duck",
    "Darla",
    "Destiny",
    "Dewey Duck",
    "Dinah",
    "Dizzy",
    "Doc",
    "Dodger",
    "Donald Duck",
    "Dopey",
    "Dory",
    "Drizella",
    "Duchess",
    "Huey Duck",
    "Duke",
    "Dumbo",
    "Ed",
    "Eeyore",
    "Ellie",
    "Elliot",
    "Elsa",
    "Ernesto",
    "Esmeralda",
    "Eudora",
    "Eugene",
    "Evie",
    "Evil Queen",
    "Fauna",
    "Fa Zhou",
    "Felix",
    "Figaro",
    "Finnick",
    "Flit",
    "Flora",
    "Flounder",
    "Flower",
    "Flynn",
    "Gaston",
    "Genie",
    "George Banks",
    "Geppetto",
    "Giselle",
    "Goofy",
    "Grumpy",
    "Gus",
    "Hamm",
    "Hans",
    "Happy",
    "Hector",
    "Hei Hei",
    "Hercules",
    "Louie Duck",
    "Hiro",
    "Horace",
    "Hugo",
    "Iago",
    "Imelda",
    "Isabela",
    "Jack",
    "Jafar",
    "Jane",
    "Jane Banks",
    "Jaq",
    "Jasmine",
    "Jasper",
    "Jessie",
    "Jim Hawkins",
    "Jimmy",
    "John Smith",
    "Judy",
    "Kaa",
    "Kala",
    "Kanga",
    "Kessie",
    "Kristoff",
    "Kuzco",
    "Lady",
    "Lady Kluck",
    "LeFou",
    "Li Shang",
    "Lilo",
    "Ling",
    "Linguini",
    "Louis",
    "Lucky",
    "Luisa",
    "Lumi√®re",
    "Mal",
    "Mary Poppins",
    "Mad Hatter",
    "Marlin",
    "Maurice",
    "Maui",
    "Max",
    "Meeko",
    "Megara",
    "Mei Lin Lee",
    "Merida",
    "Merryweather",
    "Mickey Mouse",
    "Michael Banks",
    "Madam Mim",
    "Minnie Mouse",
    "Moana",
    "Mowgli",
    "Mr. Potato Head",
    "Mrs. Potts",
    "Mufasa",
    "Mulan",
    "Mushu",
    "Nala",
    "Nana",
    "Nani",
    "Nash",
    "Naveen",
    "Nemo",
    "Nora",
    "Oliver",
    "Oaken",
    "Olaf",
    "Pabbie",
    "Pacha",
    "Pascal",
    "Patch",
    "Peg",
    "Pegasus",
    "Pepa",
    "Peter Pan",
    "Perdita",
    "Phoebus",
    "Piglet",
    "Pluto",
    "Pocahontas",
    "Pongo",
    "Prince Charming",
    "Prince Edward",
    "Prince Eric",
    "Prince Philip",
    "Prudence",
    "Pua",
    "Pumbaa",
    "Quasimodo",
    "Queen of Hearts",
    "Rafiki",
    "Rajah",
    "Rapunzel",
    "Raya",
    "Remy",
    "Rex",
    "Roger",
    "Rolly",
    "Roo",
    "Russell",
    "Sally",
    "Sarafina",
    "Scar",
    "Scuttle",
    "Sebastian",
    "Sgt. Tibbs",
    "Shenzi",
    "Shere Khan",
    "Sid",
    "Simba",
    "Sleepy",
    "Slinky Dog",
    "Sneezy",
    "Snow White",
    "Stella",
    "Sven",
    "Thumper",
    "Tiana",
    "Tigger",
    "Timon",
    "Timothy Q. Mouse",
    "Tinker Bell",
    "King Triton",
    "Tweedledum",
    "Ursula",
    "Wendy",
    "White Rabbit",
    "Winnie the Pooh",
    "Woody",
    "Yzma",
    "Zazu",
  ];

  for (let i = 0; i < guests.length; i++) {
    const name = guests[i];
    if (!name) {
      continue;
    }
    const email = name.replace(/ /g, "").toLowerCase() + "@example.com";
    await prisma.user.upsert({
      where: { email: email },
      update: {},
      create: {
        email: email,
        name: name,
        role: Role.GUEST,
        group: i % 2 === 0 ? Group.EVENING : Group.DAY,
      },
    });
  }

  // Create some content
  await prisma.content.upsert({
    where: { slug: "home" },
    update: {},
    create: {
      slug: "home",
      html: "<h1>Welcome to our website!</h1>",
      updatedByUserId: user1.id,
    },
  });

  // create an rsvp for half the guests
  for (const name of guests) {
    const user = await prisma.user.findFirst({
      where: { name: name },
    });
    if (!user) {
      continue;
    }
    if (user.group === Group.DAY) {
      await prisma.rsvp.upsert({
        where: { userId: user.id },
        update: {},
        create: {
          userId: user.id,
          isAttending: true,
          dietaryRequirements: "?",
          extraInfo: "I'm excited",
        },
      });
    }
  }
}

main()
  .catch((e) => {
    console.error(e);
    process.exit(1);
  })
  .finally(() => {
    prisma.$disconnect().catch((e) => {
      console.error(e);
    });
  });
